This is chealpix.info, produced by makeinfo version 4.8 from
chealpix.texi.

   This manual is for CHealpix (version 0.1, 30 November 2011), a C
library which implements the Healpix spherical tesselation scheme
described by G\'orsky et al. (The Astrophysical Journal, 622:759-771,
2005).

   Copyright (C) 2011 Maurizio Tomasi.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with no Front-Cover Texts,
     and with no Back-Cover Texts.  A copy of the license is included
     in the section entitled "GNU Free Documentation License".


File: chealpix.info,  Node: Top,  Next: Introduction,  Prev: (dir),  Up: (dir)

CHealpix
********

This manual is for CHealpix (version 0.1, 30 November 2011).

* Menu:

* Introduction::                Why CHealpix exists and what it does.
* Installing CHealpix::         How to install the library.
* Pixel functions::             Associating pixels with points on the sky sphere.
* Drawing maps::                How to produce graphical representations of maps.
* General-purpose Functions::   General-purpose functions are discussed here.
* GNU Free Documentation License::
* Concept index::

   


File: chealpix.info,  Node: Introduction,  Next: Installing CHealpix,  Prev: Top,  Up: Top

1 Introduction
**************

The CHealpix library provides a set of C functions which implement the
HEALPix spherical tesselation library. Such tesselation scheme has been
proposed in the article by K. M. Go'rski et al. (The Astrophysical
Journal, 622:759-771, 2005).

   The purpose of HEALPix is to divide a sphere into patches of equal
area which have desirable properties for a number of calculations. It is
mostly used in astrophysics and cosmology, e.g.:
   * Computation of the spherical Fourier transforms for a random field
     on the sphere;

   * Efficient nearest-neighbour searches of pixels.

   Traditionally, there has always been _one_ implementation of the
HEALPix tesselation scheme: the so-called "standard" HEALPix library.
In the next paragraphs I will discuss its strenghts and weaknesses, in
order to better characterize the purposes of CHealpix.

* Menu:

* The standard HEALPix implementation::  Characteristics of the HEALPix
  library.
* Purpose and significance of CHealpix::


File: chealpix.info,  Node: The standard HEALPix implementation,  Next: Purpose and significance of CHealpix,  Prev: Introduction,  Up: Introduction

1.1 The standard HEALPix implementation
=======================================

The standard implementation of the HEALPix tesselation scheme is the
HEALPix library developed by Gorski et al.
(`http://healpix.jpl.nasa.gov/'). It provides a number of functions in
Fortran, C, C++, IDL and Java and is so far the most complete and
widely used implementation. Despite the fact that such library is
stable, tested and maintained, I believe there is the need for an
alternative library like CHealpix:
  1. There are no connections among the language bindings. (In fact,
     instead of speaking of "bindings" -- which imply that there is one
     library and many interfaces that binds to it -- one would rather
     speak of four different libraries: one for each language.) This
     implies that if one wants to implement some alternative algorithm
     for a HEALPix routine, she has to code the algorithm once for each
     language supported.

  2. The separation of the language bindings has had the effect of
     reduce the momentum in developing some of them. The C bindings
     appear to be the most neglected, for there is no facility for
     reading/saving/doing calculations on a_\ell m coefficients. This
     is particularly limiting for those developers wanting to create
     bindings to other languages by exploiting Foreign Function
     Interfaces (FFIs), as C is the _lingua franca_ used for FFI.

  3. The C/C++ bindings of the library use Doxygen to produce the
     documentation. Although Doxygen is a powerful tool, the HEALPix
     function are usually poorly documented: there is no example of use
     for any of the C++ functions, and the description of each function
     is usually only a one-liner.

  4. The installation of HEALPix is not straightforward: the library
     requires the user to install CFITSIO first, which is a rather
     large library if compared with what Healpix uses (the largest part
     of the CFITSIO code implements functions for reading/writing
     images, while HEALPix only reads and write binary tables).
     Moreover, there is no standard facility for a program using
     HEALPix to find and link the Healpix library (i.e.  no support for
     `pkg-config').


File: chealpix.info,  Node: Purpose and significance of CHealpix,  Prev: The standard HEALPix implementation,  Up: Introduction

1.2 Purpose and significance of CHealpix
========================================

CHealpix is meant to solve these issues. Of course, in order to do this
I had to do a few compromises, so that a number of users of the
Go'rski's library should stay with it. Here are the advantages of
CHealpix:
  1. Only the C language is supported, and functions are more
     "low-level".  This reduces the size of the library and eases the
     development, at the expense of loosing Fortran/IDL developers
     (which are the majority of Go'rski's library users).

  2. It only supports maps of double values (the C++ bindings of the
     Healpix library use template and the user can therefore create
     maps of ints, booleans and so on). Since any 32-bit integer can be
     represented exactly in a 8-byte double, this means that precision
     is rarely an issue, but memory can be easily wasted.

  3. Although it is meant as a basis for creating bindings to other
     languages, CHealpix itself only provides C bindings (i.e. no
     Fortran/IDL support). Also, even if you can use CHealpix in a C++
     program, the library is not going to use all those nice features
     of C++ like std::vector and templates.

  4. The library tries to support all the facilities provided by the
     standard HEALPix library, even those implemented in languages
     other than C (e.g.  projecting maps to bitmapped images).

  5. The documentation (what you are reading) tries to be comprehensive
     and full of examples.

  6. The library uses the GNU Autotools to configure itself and supports
     `pkg-config'.

   


File: chealpix.info,  Node: Installing CHealpix,  Next: Pixel functions,  Prev: Introduction,  Up: Top

2 Installing CHealpix
*********************

In this chapter I describe how to get the CHealpix source code, compile
it and install it. At the end of the chapter there is also an example of
how to compile your program so that they can use the library.

* Menu:

* Obtaining the library::       Where and how to download CHealpix.
* Installing the library::      Compiling sources and copying files to your system.
* Testing the library::         Does the library work properly on your computer?
* Using the library::           How to link your program to CHealpix.


File: chealpix.info,  Node: Obtaining the library,  Next: Installing the library,  Prev: Installing CHealpix,  Up: Installing CHealpix

2.1 Obtaining the library
=========================

The library is maintained on the SourceForge website, a web-based source
code repository.


File: chealpix.info,  Node: Installing the library,  Next: Testing the library,  Prev: Obtaining the library,  Up: Installing CHealpix

2.2 Installing the library
==========================

Run `configure'.


File: chealpix.info,  Node: Testing the library,  Next: Using the library,  Prev: Installing the library,  Up: Installing CHealpix

2.3 Testing the library
=======================

Once you have built the library with `make', you can run `make test' to
execute a battery of tests. The purpose of such tests is to verify that
the library produces correct results on your computer. If this is _not_
the case, you should report these failure as they indicate that there
are bugs in the library.


File: chealpix.info,  Node: Using the library,  Prev: Testing the library,  Up: Installing CHealpix

2.4 Using the library in your programs
======================================

Since CHealpix supports `pkg-config'
(`http://www.freedesktop.org/wiki/Software/pkg-config'), you can
compile your program `foo.c' using the following command:
     cc -o foo foo.c `pkg-config --cflags --libs chealpix`

   


File: chealpix.info,  Node: Pixel functions,  Next: Drawing maps,  Prev: Installing CHealpix,  Up: Top

3 Pixel functions
*****************

In this section we describe the functions implemented by CHealpix that
allow to associate points on the sky sphere with pixels in the HEALPix
tessellation.

* Menu:

* Number of pixels::            Determining how many pixels are in the sky.


File: chealpix.info,  Node: Number of pixels,  Prev: Pixel functions,  Up: Pixel functions

3.1 Number of pixels
====================

 -- Library Function: pixel_num_t chpx_nside_to_npixel (const unsigned
          short NSIDE)
     Given a value for the NSIDE parameter (any positive integer power
     of 2), the function returns the number of pixels the sky sphere is
     divided into. If NSIDE is not valid, the function returns zero.

 -- Library Function: unsigned short chpx_npixel_to_nside (const
          pixel_num_t NUM_OF_PIXELS)
     Given the number of pixels in the sky sphere, this function
     returns the value of NSIDE uniquely associated with it. The
     function does _not_ accept arbitrary values for NUM_OF_PIXELS. Any
     invalid value for this parameter will make the function return
     zero.

   


File: chealpix.info,  Node: Drawing maps,  Next: General-purpose Functions,  Prev: Pixel functions,  Up: Top

4 Drawing maps
**************

In this section we describe the most complex part of the library, that
is the code that produces a graphical representation of a map. To better
understand the difficulties of such task, let us consider how this is
accomplished by the standard HEALPix library and by Healpy, a Python
wrapper to HEALPix (`https://github.com/healpy/healpy'). The "standard"
Healpix implementation is able to plot maps in a number of ways:

   * The IDL library contains roughly 7\,600 lines of code which
     implement `MOLLVIEW' and similar functions. Such functions are
     written in pure IDL and use the IDL plotting functions.

   * A standalone program, `map2gif', converts a map saved in a FITS
     file into a GIF image. Such program is written in Fortran90 and is
     roughly 1\,200 lines of code, plus the source code of the
     `gifdraw' library (roughly 12\,000 lines of code, in the directory
     `\tt src/f90/lib' of the tarball).

   * A standalone program, `map2tga', does the same as `map2gif', but
     it is written in C++ and takes 800 lines of code.  It uses no
     external graphics library to produce the plots.

   It is worth stressing that IDL is the only language binding that
implements a set of functions for plotting maps. Both `map2tga' and
`map2gif' are _standalone_ programs and do not expose any facility to
the library user for incorporating their functionality into a larger
program (unless of couse the program calls them in background to
produce a image file which is then read by the program itself).

   Because of this situation, the creators of the Healpy Python library
decided to implement a set of plotting routines from scratch. More than
2\,000 lines of code are needed to implement functions like `mollview'
and `mollzoom'; they are based on the well-known `matplotlib' library.

   Our approach is to implement a very generic interface for map
plotting in CHealpix (i.e. one that is agnostic to the tool actually
used to draw the map: Quartz, Gtk+, Cairo...). Depending on the
graphics library, there are two possible approaches for drawing a map:
  1. Generate a bitmap. (This is the approach followed by the Healpix
     library and by Healpy.) The output of the process is a $N\times M$
     matrix of pixels whose elements are calculated using a ray-tracing
     algorithm. The image has a fixed resolution, which implies that it
     shows poor results when enlarged. The ray-tracing algorithm has the
     advantage of being quite fast, and bitmaps can be displayed and
     saved quickly. When saved, the size of the file scales with the
     number of elements in the matrix, but it is independent of the
     number of pixels in the map.

  2. Generate a vector image. This solution has the drawback of
     producing very large files when NSIDE is large, but vector maps
     scale very well when enlarged. The typical formats used to store
     such maps are Postscript and PDF.

   CHealpix provides two sets of functions to ease the production of
bitmapped and vector maps. Such functions need to be wrapped with some
glue code which actually writes the map on disk or display it on the
screen.

* Menu:

* Generating bitmapped graphics::


File: chealpix.info,  Node: Generating bitmapped graphics,  Prev: Drawing maps,  Up: Drawing maps

4.1 Generating bitmapped graphics
=================================

The interface provided by CHealpix for the generation of bitmapped
graphics clearly shows the ray-tracing algorithm on whom it is grounded.
In the following discussion we shall try to prevent the ambiguity
between a "pixel" in a Healpix map and a "pixel" in a bitmap by
referring to the second as "an element in the N \times M matrix," or
"matrix element" for short. All the functions implemented in this
section have their name beginning with `chpx_bmp_'.

   The most important function used to draw bitmapped maps is
`chpx_bmp_get_hits'. It searches for the pixels in the map which fall
within one matrix element in the bitmap. (Note that, expecially for
maps with high values of NSIDE, one matrix element might contain many
pixels.)

   


File: chealpix.info,  Node: General-purpose Functions,  Next: GNU Free Documentation License,  Prev: Drawing maps,  Up: Top

5 General-purpose Functions
***************************

In this chapter we will present a number of functions that have been
defined by CHealpix and do not fit anywhere else in the documentation.

   


File: chealpix.info,  Node: GNU Free Documentation License,  Next: Concept index,  Prev: General-purpose Functions,  Up: Top

Appendix A GNU Free Documentation License
*****************************************

                      Version 1.2, November 2002

     Copyright (C) 2000,2001,2002 Free Software Foundation, Inc.
     51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     functional and useful document "free" in the sense of freedom: to
     assure everyone the effective freedom to copy and redistribute it,
     with or without modifying it, either commercially or
     noncommercially.  Secondarily, this License preserves for the
     author and publisher a way to get credit for their work, while not
     being considered responsible for modifications made by others.

     This License is a kind of "copyleft", which means that derivative
     works of the document must themselves be free in the same sense.
     It complements the GNU General Public License, which is a copyleft
     license designed for free software.

     We have designed this License in order to use it for manuals for
     free software, because free software needs free documentation: a
     free program should come with manuals providing the same freedoms
     that the software does.  But this License is not limited to
     software manuals; it can be used for any textual work, regardless
     of subject matter or whether it is published as a printed book.
     We recommend this License principally for works whose purpose is
     instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work, in any medium,
     that contains a notice placed by the copyright holder saying it
     can be distributed under the terms of this License.  Such a notice
     grants a world-wide, royalty-free license, unlimited in duration,
     to use that work under the conditions stated herein.  The
     "Document", below, refers to any such manual or work.  Any member
     of the public is a licensee, and is addressed as "you".  You
     accept the license if you copy, modify or distribute the work in a
     way requiring permission under copyright law.

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with
     modifications and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter section
     of the Document that deals exclusively with the relationship of the
     publishers or authors of the Document to the Document's overall
     subject (or to related matters) and contains nothing that could
     fall directly within that overall subject.  (Thus, if the Document
     is in part a textbook of mathematics, a Secondary Section may not
     explain any mathematics.)  The relationship could be a matter of
     historical connection with the subject or with related matters, or
     of legal, commercial, philosophical, ethical or political position
     regarding them.

     The "Invariant Sections" are certain Secondary Sections whose
     titles are designated, as being those of Invariant Sections, in
     the notice that says that the Document is released under this
     License.  If a section does not fit the above definition of
     Secondary then it is not allowed to be designated as Invariant.
     The Document may contain zero Invariant Sections.  If the Document
     does not identify any Invariant Sections then there are none.

     The "Cover Texts" are certain short passages of text that are
     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
     that says that the Document is released under this License.  A
     Front-Cover Text may be at most 5 words, and a Back-Cover Text may
     be at most 25 words.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the
     general public, that is suitable for revising the document
     straightforwardly with generic text editors or (for images
     composed of pixels) generic paint programs or (for drawings) some
     widely available drawing editor, and that is suitable for input to
     text formatters or for automatic translation to a variety of
     formats suitable for input to text formatters.  A copy made in an
     otherwise Transparent file format whose markup, or absence of
     markup, has been arranged to thwart or discourage subsequent
     modification by readers is not Transparent.  An image format is
     not Transparent if used for any substantial amount of text.  A
     copy that is not "Transparent" is called "Opaque".

     Examples of suitable formats for Transparent copies include plain
     ASCII without markup, Texinfo input format, LaTeX input format,
     SGML or XML using a publicly available DTD, and
     standard-conforming simple HTML, PostScript or PDF designed for
     human modification.  Examples of transparent image formats include
     PNG, XCF and JPG.  Opaque formats include proprietary formats that
     can be read and edited only by proprietary word processors, SGML or
     XML for which the DTD and/or processing tools are not generally
     available, and the machine-generated HTML, PostScript or PDF
     produced by some word processors for output purposes only.

     The "Title Page" means, for a printed book, the title page itself,
     plus such following pages as are needed to hold, legibly, the
     material this License requires to appear in the title page.  For
     works in formats which do not have any title page as such, "Title
     Page" means the text near the most prominent appearance of the
     work's title, preceding the beginning of the body of the text.

     A section "Entitled XYZ" means a named subunit of the Document
     whose title either is precisely XYZ or contains XYZ in parentheses
     following text that translates XYZ in another language.  (Here XYZ
     stands for a specific section name mentioned below, such as
     "Acknowledgements", "Dedications", "Endorsements", or "History".)
     To "Preserve the Title" of such a section when you modify the
     Document means that it remains a section "Entitled XYZ" according
     to this definition.

     The Document may include Warranty Disclaimers next to the notice
     which states that this License applies to the Document.  These
     Warranty Disclaimers are considered to be included by reference in
     this License, but only as regards disclaiming warranties: any other
     implication that these Warranty Disclaimers may have is void and
     has no effect on the meaning of this License.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the
     copyright notices, and the license notice saying this License
     applies to the Document are reproduced in all copies, and that you
     add no other conditions whatsoever to those of this License.  You
     may not use technical measures to obstruct or control the reading
     or further copying of the copies you make or distribute.  However,
     you may accept compensation in exchange for copies.  If you
     distribute a large enough number of copies you must also follow
     the conditions in section 3.

     You may also lend copies, under the same conditions stated above,
     and you may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies (or copies in media that commonly
     have printed covers) of the Document, numbering more than 100, and
     the Document's license notice requires Cover Texts, you must
     enclose the copies in covers that carry, clearly and legibly, all
     these Cover Texts: Front-Cover Texts on the front cover, and
     Back-Cover Texts on the back cover.  Both covers must also clearly
     and legibly identify you as the publisher of these copies.  The
     front cover must present the full title with all words of the
     title equally prominent and visible.  You may add other material
     on the covers in addition.  Copying with changes limited to the
     covers, as long as they preserve the title of the Document and
     satisfy these conditions, can be treated as verbatim copying in
     other respects.

     If the required texts for either cover are too voluminous to fit
     legibly, you should put the first ones listed (as many as fit
     reasonably) on the actual cover, and continue the rest onto
     adjacent pages.

     If you publish or distribute Opaque copies of the Document
     numbering more than 100, you must either include a
     machine-readable Transparent copy along with each Opaque copy, or
     state in or with each Opaque copy a computer-network location from
     which the general network-using public has access to download
     using public-standard network protocols a complete Transparent
     copy of the Document, free of added material.  If you use the
     latter option, you must take reasonably prudent steps, when you
     begin distribution of Opaque copies in quantity, to ensure that
     this Transparent copy will remain thus accessible at the stated
     location until at least one year after the last time you
     distribute an Opaque copy (directly or through your agents or
     retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of
     the Document well before redistributing any large number of
     copies, to give them a chance to provide you with an updated
     version of the Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document
     under the conditions of sections 2 and 3 above, provided that you
     release the Modified Version under precisely this License, with
     the Modified Version filling the role of the Document, thus
     licensing distribution and modification of the Modified Version to
     whoever possesses a copy of it.  In addition, you must do these
     things in the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title
          distinct from that of the Document, and from those of
          previous versions (which should, if there were any, be listed
          in the History section of the Document).  You may use the
          same title as a previous version if the original publisher of
          that version gives permission.

       B. List on the Title Page, as authors, one or more persons or
          entities responsible for authorship of the modifications in
          the Modified Version, together with at least five of the
          principal authors of the Document (all of its principal
          authors, if it has fewer than five), unless they release you
          from this requirement.

       C. State on the Title page the name of the publisher of the
          Modified Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications
          adjacent to the other copyright notices.

       F. Include, immediately after the copyright notices, a license
          notice giving the public permission to use the Modified
          Version under the terms of this License, in the form shown in
          the Addendum below.

       G. Preserve in that license notice the full lists of Invariant
          Sections and required Cover Texts given in the Document's
          license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section Entitled "History", Preserve its Title,
          and add to it an item stating at least the title, year, new
          authors, and publisher of the Modified Version as given on
          the Title Page.  If there is no section Entitled "History" in
          the Document, create one stating the title, year, authors,
          and publisher of the Document as given on its Title Page,
          then add an item describing the Modified Version as stated in
          the previous sentence.

       J. Preserve the network location, if any, given in the Document
          for public access to a Transparent copy of the Document, and
          likewise the network locations given in the Document for
          previous versions it was based on.  These may be placed in
          the "History" section.  You may omit a network location for a
          work that was published at least four years before the
          Document itself, or if the original publisher of the version
          it refers to gives permission.

       K. For any section Entitled "Acknowledgements" or "Dedications",
          Preserve the Title of the section, and preserve in the
          section all the substance and tone of each of the contributor
          acknowledgements and/or dedications given therein.

       L. Preserve all the Invariant Sections of the Document,
          unaltered in their text and in their titles.  Section numbers
          or the equivalent are not considered part of the section
          titles.

       M. Delete any section Entitled "Endorsements".  Such a section
          may not be included in the Modified Version.

       N. Do not retitle any existing section to be Entitled
          "Endorsements" or to conflict in title with any Invariant
          Section.

       O. Preserve any Warranty Disclaimers.

     If the Modified Version includes new front-matter sections or
     appendices that qualify as Secondary Sections and contain no
     material copied from the Document, you may at your option
     designate some or all of these sections as invariant.  To do this,
     add their titles to the list of Invariant Sections in the Modified
     Version's license notice.  These titles must be distinct from any
     other section titles.

     You may add a section Entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various
     parties--for example, statements of peer review or that the text
     has been approved by an organization as the authoritative
     definition of a standard.

     You may add a passage of up to five words as a Front-Cover Text,
     and a passage of up to 25 words as a Back-Cover Text, to the end
     of the list of Cover Texts in the Modified Version.  Only one
     passage of Front-Cover Text and one of Back-Cover Text may be
     added by (or through arrangements made by) any one entity.  If the
     Document already includes a cover text for the same cover,
     previously added by you or by arrangement made by the same entity
     you are acting on behalf of, you may not add another; but you may
     replace the old one, on explicit permission from the previous
     publisher that added the old one.

     The author(s) and publisher(s) of the Document do not by this
     License give permission to use their names for publicity for or to
     assert or imply endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under
     this License, under the terms defined in section 4 above for
     modified versions, provided that you include in the combination
     all of the Invariant Sections of all of the original documents,
     unmodified, and list them all as Invariant Sections of your
     combined work in its license notice, and that you preserve all
     their Warranty Disclaimers.

     The combined work need only contain one copy of this License, and
     multiple identical Invariant Sections may be replaced with a single
     copy.  If there are multiple Invariant Sections with the same name
     but different contents, make the title of each such section unique
     by adding at the end of it, in parentheses, the name of the
     original author or publisher of that section if known, or else a
     unique number.  Make the same adjustment to the section titles in
     the list of Invariant Sections in the license notice of the
     combined work.

     In the combination, you must combine any sections Entitled
     "History" in the various original documents, forming one section
     Entitled "History"; likewise combine any sections Entitled
     "Acknowledgements", and any sections Entitled "Dedications".  You
     must delete all sections Entitled "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other
     documents released under this License, and replace the individual
     copies of this License in the various documents with a single copy
     that is included in the collection, provided that you follow the
     rules of this License for verbatim copying of each of the
     documents in all other respects.

     You may extract a single document from such a collection, and
     distribute it individually under this License, provided you insert
     a copy of this License into the extracted document, and follow
     this License in all other respects regarding verbatim copying of
     that document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other
     separate and independent documents or works, in or on a volume of
     a storage or distribution medium, is called an "aggregate" if the
     copyright resulting from the compilation is not used to limit the
     legal rights of the compilation's users beyond what the individual
     works permit.  When the Document is included in an aggregate, this
     License does not apply to the other works in the aggregate which
     are not themselves derivative works of the Document.

     If the Cover Text requirement of section 3 is applicable to these
     copies of the Document, then if the Document is less than one half
     of the entire aggregate, the Document's Cover Texts may be placed
     on covers that bracket the Document within the aggregate, or the
     electronic equivalent of covers if the Document is in electronic
     form.  Otherwise they must appear on printed covers that bracket
     the whole aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may
     distribute translations of the Document under the terms of section
     4.  Replacing Invariant Sections with translations requires special
     permission from their copyright holders, but you may include
     translations of some or all Invariant Sections in addition to the
     original versions of these Invariant Sections.  You may include a
     translation of this License, and all the license notices in the
     Document, and any Warranty Disclaimers, provided that you also
     include the original English version of this License and the
     original versions of those notices and disclaimers.  In case of a
     disagreement between the translation and the original version of
     this License or a notice or disclaimer, the original version will
     prevail.

     If a section in the Document is Entitled "Acknowledgements",
     "Dedications", or "History", the requirement (section 4) to
     Preserve its Title (section 1) will typically require changing the
     actual title.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document
     except as expressly provided for under this License.  Any other
     attempt to copy, modify, sublicense or distribute the Document is
     void, and will automatically terminate your rights under this
     License.  However, parties who have received copies, or rights,
     from you under this License will not have their licenses
     terminated so long as such parties remain in full compliance.

 10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of
     the GNU Free Documentation License from time to time.  Such new
     versions will be similar in spirit to the present version, but may
     differ in detail to address new problems or concerns.  See
     `http://www.gnu.org/copyleft/'.

     Each version of the License is given a distinguishing version
     number.  If the Document specifies that a particular numbered
     version of this License "or any later version" applies to it, you
     have the option of following the terms and conditions either of
     that specified version or of any later version that has been
     published (not as a draft) by the Free Software Foundation.  If
     the Document does not specify a version number of this License,
     you may choose any version ever published (not as a draft) by the
     Free Software Foundation.

ADDENDUM: How to use this License for your documents
====================================================

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and license
notices just after the title page:

       Copyright (C)  YEAR  YOUR NAME.
       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.2
       or any later version published by the Free Software Foundation;
       with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
       Texts.  A copy of the license is included in the section entitled ``GNU
       Free Documentation License''.

   If you have Invariant Sections, Front-Cover Texts and Back-Cover
Texts, replace the "with...Texts." line with this:

         with the Invariant Sections being LIST THEIR TITLES, with
         the Front-Cover Texts being LIST, and with the Back-Cover Texts
         being LIST.

   If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.

   If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of
free software license, such as the GNU General Public License, to
permit their use in free software.


File: chealpix.info,  Node: Concept index,  Prev: GNU Free Documentation License,  Up: Top

Concept index
*************

 [index ]
* Menu:

* FDL, GNU Free Documentation License:   GNU Free Documentation License.
                                                                (line 6)



Tag Table:
Node: Top739
Node: Introduction1343
Node: The standard HEALPix implementation2446
Node: Purpose and significance of CHealpix4826
Node: Installing CHealpix6568
Node: Obtaining the library7240
Node: Installing the library7522
Node: Testing the library7733
Node: Using the library8228
Node: Pixel functions8636
Node: Number of pixels9022
Node: Drawing maps9856
Node: Generating bitmapped graphics13189
Node: General-purpose Functions14103
Node: GNU Free Documentation License14434
Node: Concept index36888

End Tag Table
